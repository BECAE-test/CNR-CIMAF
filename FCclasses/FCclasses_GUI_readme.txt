### Step-by-Step Guide to Install and Run FCclasses GUI

All the following commands must be executed in a Bash terminal.

#### Step 1: Run the Pre-Installation Script

1.1 Download FCclasses: http://www.iccom.cnr.it/it/fcclasses-2/
	
2.1 Install FCclasses:
	Please refer to FCclasses3 manual. 

#### Step 2: Install FCclasses GUI libraries
	
2.1 If the script is not executable, make it executable by running the command:
	chmod a+x Setup_FCclasses_GUI.sh
	
2.2 Run the script with the command:
	./Setup_FCclasses_GUI.sh
	
2.3 During the installation process, the terminal will display error messages if something goes wrong. Otherwise, a success message will be shown.

2.4 Once installation ends type the following:
	source ~/.bashrc


#### Step 3: Run the python code (this procedure requires the activation of virtual environment!)

3.1 Copy the new executable where you need to run joyce

3.2 To activate virtual environment just type:
	FCCLASS
	"(.venv)" must appears

3.3 To run the Joyce GUI type the following:
	python3 ./FCclasses_GUI.py

#### Step 4: FCclasses GUI user-guide

4.1 A compact user interface opens, displaying four buttons.
	Each button triggers a specific function.
	- Button "Generate State File" launches the gen_fcc_state tool from FCclasses3
	- Button "Generate Dipole File" launches the gen_fcc_dipfile tool from FCclasses3
	- Button "Edit Input File" allows editing the main input file of FCclasses3
	- Button "Run FCclasses" executes FCclasses3 using the selected input file
	
	4.1.1 Button **"Generate State File"**  
		Upon activation, the user selects the file to be processed via the *gen_fcc_state* tool.  
		Once selected, a dedicated interface allows customization of the *gen_fcc_state* command to handle files from various sources.  
		An integrated help guide assists the user in configuring options.  
		After execution, the user is prompted whether to display the command output.  

	4.1.2 Button **"Generate Dipole File"**  
		Upon activation, the user selects the file to be processed via the *gen_fcc_state* tool.  
		Once selected, a dedicated interface allows customization of the *gen_fcc_state* command to handle files from various sources.  
		An integrated help guide assists the user in configuring options.  
		After execution, the user is prompted whether to display the command output.  

	4.1.3 Button **"Edit Input File"**  
		Upon activation, the user may choose an input file from all “.inp” files available in the current working directory or load a default template.  
		A new interface displays the selected input file and enables direct editing.  
		The interface consists of two primary panels:  
		- The first allows modification of parameters associated with keywords already present in the input file.  
		- The second enables insertion of additional keywords, consistent with the existing structure of the file.  
		To insert, the user selects a keyword from a dropdown menu, assigns a value, and presses the **"Insert"** button.  
		Additional options include switching between a complete template (Advanced properties) and a default template (Standard properties), saving the current file, or saving it under a new name.  
		The **"Create RM_IC_file"** button also provides access to a specialized interface for generating a .dat file required by FCclasses.  

		4.1.3.1 Button **"Create RM_IC_file"**  
			Upon activation, the user selects a source file (*internal_coords_set.dat*, generated during an initial FCclasses run).  
			By highlighting two or more rows, the user can define a dependency group.  
			The interface includes an explanatory graphic to facilitate understanding of the displayed data.  
			After selecting rows and pressing **"Generate"**, the tool produces new entries, saves them to a .dat file (user-defined name), and automatically updates the input file (.inp) under the keyword **"RM_IC_FILE"**.  

		4.1.3.2 Button **"Close edit window"**  
			Closes the editing interface and returns to the main interface.  
			**Note:** the file should be saved before closing the window.  

	4.1.4 Button **"Run FCclasses"**  
		Executes FCclasses3 with the chosen input file.  
		At the end of execution, the user may view the output generated by FCclasses3.  
