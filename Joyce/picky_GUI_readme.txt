### Step-by-Step Guide to Install and Run Picky GUI

All the following commands must be executed in a Bash terminal.

#### Step 1: Run the Pre-Installation Script

1.1 Download Picky: http://www.iccom.cnr.it/it/picky-v-3-0/
	
1.2 Install Picky:
	Please refer to Picky manual. 

N.B. To execute this script permanent environmental variable PICKY is necessary. (see Picky installation guide)

#### Step 2: Install Picky GUI libraries
N.B. "requirements.txt" contains the names of additional library to be installaed. Do not elimitate it.

2.1 If the script is not executable, make it executable by running the command:
	chmod a+x Setup_picky_GUI.sh
	
2.2 Run the script with the command:
	./Setup_picky_GUI.sh
	
2.3 During the installation process, the terminal will display error messages if something goes wrong. Otherwise, a success message will be shown.

2.4 Once installation ends type the following:
	source ~/.bashrc
	
2.3 During the compilation process, the terminal will display error messages if something goes wrong. Otherwise, a success message will be shown.

2.4 If the compilation is successful, an executable file named "Picky_GUI" will be generated inside the current folder.

#### Step 3: Run the Executable (this procedure requires the activation of virtual environment!)

3.1 Copy the new executable where you need to run joyce

3.2 To activate virtual environment just type:
	PICKY
	"(.venv)" must appears

3.3 To run the Joyce GUI type the following:
	python3 ./picky_GUI.py

#### Step 4: Picky GUI user-guide

4.1 Once started, the GUI shows several buttons.	
	Button "CreateCycle-n folder" with associated text input box: allows the creation of the folders needed for each calculation cycle.  
	Button "Dimer sampling": first calculation step of picky.  
	Button "Edit resources": allows modifying the memory and CPU features listed in the .com files processed by Gaussian.  
	Button "QM Recover": allows recovering molecular energies from the .log files generated by Gaussian.  
	Button "Fitting FF": allows preparation for using the tool "go.pickyfit".  
	Button "Convergence test": allows preparation of the files for using the tool "go.getDeltaP".  
	Button "Get system configuration": allows preparation of the files needed for running the Gromacs calculation.  
	Button "Quit": closes the interface.  

	4.1.1 Button "Dimer sampling":  
		When pressing the button, the user is asked to enter an integer corresponding to the calculation cycle being executed. The Cycle-n folders are displayed  
		within the interface itself.  
		Proceeding, all necessary files for the execution of the first calculation step are copied into Cyclen/1.picky.  
		If the file is already present in the folder, the user is asked whether to select another one or keep the existing one.  
		Once the required files are copied, a template of the input file is imported to be edited in a dedicated interface.  
		A panel shows different elements:  
		- Drop-down menu showing the keywords present in the text, with a dedicated text box to edit the associated parameter; the "Confirm keyword" button applies the change in the displayed file.  
		- Drop-down menu showing the keywords that can be inserted, with a dedicated text box for the associated parameter.  
		- "Confirm keywords" button for inserting/modifying parameters; this button confirms only the keyword written in the text box. N.B. Insert one value at a time.  
		- "Save" button allows overwriting the displayed file.  
		- "Save as..." button allows saving the displayed file under a different name.  
		- "Create new geometry" button:  
			Allows creating a new geometry to be associated with the "$geometry" keyword.  
			When pressed, it enables another interface that allows generating geometry lines according to the scheme [site name] [x] [y] [z] [frag num.] [intruder frag num.] [site label]. The [site label] is generated automatically based on [site name].  
			Buttons allow adding or deleting the next line, confirming, or closing the editor. The created block will replace the one already contained in the input file.  
		- "Continue" button proceeds to an additional screen showing the command that is about to be executed.  
			The user can add arguments to the command in dedicated text boxes and choose between multiple input files eventually present in the execution folder (1.picky in this case).  
		Once the calculation is executed, the output of picky can be displayed.  

	4.1.2 Button "Edit resources":  
		Once the cycle number to be modified is selected, the user can enter an integer corresponding to the RAM memory to be used for the Gaussian calculation, specifying the unit "MB" or "GB",  
		and the integer number of processors to be used. These parameters will replace those already present in all .com files found in "cyclen/1.picky".  

	4.1.3 Button "QM recover":  
		Once the cycle number is selected, the user is asked to choose the folder from which to recover the .log files generated by the Gaussian calculation.  
		These will be copied into cyclen/2.QMsampling. A dedicated interface allows specifying the method for running the "go.pickyrecover" tool.  

	4.1.4 Button "Fitting FF":  
		Once the cycle number is selected, the necessary files are copied into 3.fit.  
		If some files already exist inside the folder, the user is asked whether to select different ones or keep the existing ones.  
		Subsequently, a screen opens showing the input file for the "pickyfit" tool, where parameters can be modified as desired.  
		From the three displayed drop-down menus, it is possible to select the block to edit, the parameter, and the chemical species to modify.  
		By specifying the parameter value and pressing the "Edit" button, the parameter is automatically replaced.  
		- The "Save" button allows saving the displayed file.  
		- The "Continue" button proceeds with the use of the "pickyfit" tool and then allows displaying the output of the executed calculation.  
		- The "Close" button closes the current screen.  

	4.1.5 Button "Convergence test":  
		Once the cycle number is selected, the files required for the convergence test are automatically copied into the 4.deltaP folder.  
		Afterwards, the user is asked to select the file containing the previous parameters to be used for the convergence test, which will then be copied into the same folder.  
		When the file is selected, the "go.getDeltaP" tool is launched, and once completed, the standard deviation value printed by the tool inside the "DeltaP.log" file is displayed.  

	4.1.6 Button "Get system configuration":  
		After selecting the cycle number, the files required for the next step are copied.  
		Once all files are copied, the Gromacs calculation input file "NPT.mdp" is opened, where the user can modify the parameters.  
		The modification is performed by selecting the keyword via a drop-down menu and entering the desired value in the dedicated text box. By pressing "Confirm keyword", the parameter is modified inside the file.  
		- The "Save" button allows saving the displayed file.  
		- The "Save as..." button allows saving the displayed file under a different name.  
		- The "Continue" button closes the screen, extracting the "atoms" and "atomtypes" sections from "gromacs.prms" and inserting them into the latest topology file contained in cyclen/5.MD.  

	4.1.7 Button "Quit":  
		This button closes the interface.  
		